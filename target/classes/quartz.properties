# Default Properties file for use by StdSchedulerFactory
# to create a Quartz Scheduler Instance, if a different
# properties file is not explicitly specified.
#

#============================================================================
# Configure Main Scheduler Properties
#============================================================================
#设置默认调度程序的名称，如正在使用群集功能，则必须对群集中“逻辑上”相同的调度程序的每个实例使用相同的名称，重新赋值该值。
org.quartz.scheduler.instanceName = DefaultQuartzScheduler
org.quartz.scheduler.instanceId = AUTO
#远程管理相关的配置,全部关闭
#如果您希望Quartz Scheduler通过RMI作为服务器导出本身，则为true。
org.quartz.scheduler.rmi.export = false
#如果要连接（使用）远程服务的调度程序，则为true。还必须指定RMI注册表进程的主机和端口 - 通常是“localhost”端口1099
org.quartz.scheduler.rmi.proxy = false
#org.quartz.scheduler.rmi.registryHost
#org.quartz.scheduler.rmi.registryPort
#设置这项为true使我们在调用job的execute（）之前能够开始一个UserTransaction。
org.quartz.scheduler.wrapJobExecutionInUserTransaction = false

#============================================================================
# Configure ThreadPool
#============================================================================
#指定的线程池
#这个值是一个实现了 org.quartz.spi.ThreadPool 接口的类的全限名称；
#Quartz 自带的线程池实现类是 org.quartz.smpl.SimpleThreadPool
org.quartz.threadPool.class = org.quartz.simpl.SimpleThreadPool
#线程数量
org.quartz.threadPool.threadCount = 30
#优先级
#优先级别高的线程比级别低的线程更优先得到执行
#   最大值是常量java.lang.Thread.MAX_PRIORITY，等于10
#   最小值为常量 java.lang.Thread.MIN_PRIORITY，为1
#   正常值是 Thread.NORM_PRIORITY，为5
org.quartz.threadPool.threadPriority = 5
#自创建父线程
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread = true
#作业最大延迟时间毫秒
# 最大能忍受的触发超时时间(触发器被认定为“misfired”之前)，如果超过则认为“失误”【默认60秒】
org.quartz.jobStore.misfireThreshold = 60000

#============================================================================
# Configure JobStore
#============================================================================
#持久化配置
#数据保存方式为持久化
#其中org.quartz.jobStore.class是指明quartz的持久化用数据库来保存
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore

#持久化配置
#org.quartz.jobStore.class:org.quartz.impl.jdbcjobstore.JobStoreTX
##设置org.quartz.jobStore.driverDelegateClass是根据选择的数据库类型不同而不同，我这里的是mysql，所以是org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#org.quartz.jobStore.driverDelegateClass:org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#org.quartz.jobStore.useProperties:true
##加入集群
#org.quartz.jobStore.isClustered = false
##数据库表前缀
#org.quartz.jobStore.tablePrefix=QRTZ_
#org.quartz.jobStore.dataSource:qzDS
##调度实例失效的检查时间间隔
#org.quartz.jobStore.clusterCheckinInterval = 20000
## jobStore处理未按时触发的Job的数量
#org.quartz.jobStore.maxMisfiresToHandleAtATime=30
#
##============================================================================
## Configure Datasources
##============================================================================
##JDBC驱动
##设置数据源
#org.quartz.dataSource.qzDS.driver:com.mysql.jdbc.Driver
#org.quartz.dataSource.qzDS.URL:jdbc:mysql://localhost:3306/ssmwb?useUnicode=true&characterEncoding=UTF-8&useSSL=false
#org.quartz.dataSource.qzDS.user:root
#org.quartz.dataSource.qzDS.password:123
#org.quartz.dataSource.qzDS.maxConnection:10